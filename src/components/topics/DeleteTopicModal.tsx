import { useState } from 'react';import { Dialog } from '@headlessui/react';interface DeleteTopicModalProps {  isOpen: boolean;  topicName: string;  onClose: () => void;  onDelete: () => void;  isDeleting: boolean;  error: string | null;}export default function DeleteTopicModal({  isOpen,  topicName,  onClose,  onDelete,  isDeleting,  error}: DeleteTopicModalProps) {  const [confirmation, setConfirmation] = useState('');  const isConfirmed = confirmation === topicName;  return (    <Dialog open={isOpen} onClose={onClose} className="relative z-50">      <div className="fixed inset-0 bg-black/30" aria-hidden="true" />            <div className="fixed inset-0 flex items-center justify-center p-4">        <Dialog.Panel className="w-full max-w-md transform overflow-hidden rounded-lg bg-white p-6 shadow-xl transition-all">          <Dialog.Title as="h3" className="text-lg font-medium leading-6 text-gray-900 mb-2">            Delete Topic          </Dialog.Title>                    <p className="text-sm text-gray-500 mb-4">            This action cannot be undone. This will permanently delete the topic            <span className="font-semibold text-red-600"> {topicName}</span> and all its data.          </p>                    {error && (            <div className="mb-4 p-3 bg-red-50 text-red-700 rounded-md">              {error}            </div>          )}                    <div className="mb-4">            <label className="block text-sm font-medium text-gray-700 mb-1">              To confirm, type the topic name: {topicName}            </label>            <input              type="text"              value={confirmation}              onChange={(e) => setConfirmation(e.target.value)}              className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"            />          </div>                    <div className="flex justify-end space-x-3">            <button              onClick={onClose}              className="px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50"            >              Cancel            </button>            <button              onClick={onDelete}              disabled={!isConfirmed || isDeleting}              className="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 disabled:bg-red-300"            >              {isDeleting ? 'Deleting...' : 'Delete'}            </button>          </div>        </Dialog.Panel>      </div>    </Dialog>  );}
import { useState } from 'react';import { Dialog } from '@headlessui/react';import { useForm, SubmitHandler, useFieldArray } from 'react-hook-form';import { CreateTopicRequest, TopicConfig } from '@/types/kafka';interface CreateTopicModalProps {  isOpen: boolean;  onClose: () => void;  onCreateTopic: (topic: CreateTopicRequest) => void;  isSubmitting: boolean;  error: string | null;}interface FormInputs {  name: string;  numPartitions: number;  replicationFactor: number;  configs: { name: string; value: string }[];}export default function CreateTopicModal({  isOpen,  onClose,  onCreateTopic,  isSubmitting,  error}: CreateTopicModalProps) {  const { register, handleSubmit, control, formState: { errors } } = useForm<FormInputs>({    defaultValues: {      numPartitions: 1,      replicationFactor: 1,      configs: []    }  });    const { fields, append, remove } = useFieldArray({    control,    name: 'configs'  });  const onSubmit: SubmitHandler<FormInputs> = (data) => {    onCreateTopic({      name: data.name,      numPartitions: data.numPartitions,      replicationFactor: data.replicationFactor,      configs: data.configs.filter(config => config.name && config.value)    });  };  return (    <Dialog open={isOpen} onClose={onClose} className="relative z-50">      <div className="fixed inset-0 bg-black/30" aria-hidden="true" />            <div className="fixed inset-0 flex items-center justify-center p-4">        <Dialog.Panel className="w-full max-w-md transform overflow-hidden rounded-lg bg-white p-6 shadow-xl transition-all">          <Dialog.Title as="h3" className="text-lg font-medium leading-6 text-gray-900 mb-4">            Create Topic          </Dialog.Title>                    {error && (            <div className="mb-4 p-3 bg-red-50 text-red-700 rounded-md">              {error}            </div>          )}                    <form onSubmit={handleSubmit(onSubmit)}>            <div className="mb-4">              <label className="block text-sm font-medium text-gray-700 mb-1">                Topic Name              </label>              <input                {...register('name', { required: 'Topic name is required' })}                type="text"                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"              />              {errors.name && (                <p className="text-red-500 text-sm mt-1">{errors.name.message}</p>              )}            </div>                        <div className="grid grid-cols-2 gap-4 mb-4">              <div>                <label className="block text-sm font-medium text-gray-700 mb-1">                  Number of Partitions                </label>                <input                  {...register('numPartitions', {                    required: 'Required',                    min: { value: 1, message: 'Min 1' },                    valueAsNumber: true                  })}                  type="number"                  min="1"                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"                />                {errors.numPartitions && (                  <p className="text-red-500 text-sm mt-1">{errors.numPartitions.message}</p>                )}              </div>                            <div>                <label className="block text-sm font-medium text-gray-700 mb-1">                  Replication Factor                </label>                <input                  {...register('replicationFactor', {                    required: 'Required',                    min: { value: 1, message: 'Min 1' },                    valueAsNumber: true                  })}                  type="number"                  min="1"                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"                />                {errors.replicationFactor && (                  <p className="text-red-500 text-sm mt-1">{errors.replicationFactor.message}</p>                )}              </div>            </div>                        <div className="mb-4">              <div className="flex justify-between items-center mb-2">                <label className="block text-sm font-medium text-gray-700">                  Configurations (Optional)                </label>                <button                  type="button"                  onClick={() => append({ name: '', value: '' })}                  className="text-sm text-blue-600 hover:text-blue-800"                >                  + Add Config                </button>              </div>                            {fields.map((field, index) => (                <div key={field.id} className="flex gap-2 mb-2">                  <input                    {...register(`configs.${index}.name` as const)}                    placeholder="Config Name"                    className="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"                  />                  <input                    {...register(`configs.${index}.value` as const)}                    placeholder="Value"                    className="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"                  />                  <button                    type="button"                    onClick={() => remove(index)}                    className="px-2 text-gray-500 hover:text-red-600"                  >                    X                  </button>                </div>              ))}            </div>                        <div className="flex justify-end gap-3 mt-6">              <button                type="button"                onClick={onClose}                className="px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50"              >                Cancel              </button>              <button                type="submit"                disabled={isSubmitting}                className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-blue-300"              >                {isSubmitting ? 'Creating...' : 'Create Topic'}              </button>            </div>          </form>        </Dialog.Panel>      </div>    </Dialog>  );}